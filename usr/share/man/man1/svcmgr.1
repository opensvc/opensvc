.TH SVCMGR 1 2020\-04\-09
.SH NAME
svcmgr - OpenSVC agent's services instances management command.
.SH SYNOPSIS
.B svcmgr
om svc [ \fIOPTIONS\fP ] COMMAND
.SH DESCRIPTION
In the OpenSVC infrastructure, the node is an operating system instance with an OpenSVC agent installed. The node may host OpenSVC services instances. The \fBsvcmgr\fP program provides commands to provision, configure, stop, start and replicate services instances on the local node.
.SH COMMANDS

\fRCOLLECTOR MANAGEMENT\fP

  om svc collector ack action

Acknowledge an action error on the service. An acknowlegment can be completed by --author (defaults to root@nodename) and --comment.

.TP
.B --author=AUTHOR
The acker name to log when acknowledging action log errors
.TP
.B --comment=COMMENT
A comment to log when acknowldging action log error entries.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector ack unavailability

Acknowledge an unavailability period. The period is specified by '--begin' '--end' or '--begin' '--duration'. '--begin' defaults to now.

.TP
.B --author=AUTHOR
The acker name to log when acknowledging action log errors
.TP
.B --account
If set the unavailabity period is accounted in the service availability ratio maintained by the collector.
.TP
.B --begin=BEGIN
A begin date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --end=END
A end date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --comment=COMMENT
A comment to log when acknowldging action log error entries.
.TP
.B --duration=DURATION
A duration expression like, '1h10m'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector alerts

Display service alerts.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector asset

Display asset information known to the collector.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector checks

Display service checks.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector create tag

Create a new tag.

.TP
.B --tag=TAG
The tag name, as shown by 'collector list tags'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector disks

Display service disks.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector events

Display the service events during the period specified by --begin/--end. --end defaults to now. --begin defaults to 7 days ago.

.TP
.B --begin=BEGIN
A begin date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --end=END
A end date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector list actions

List actions on the service, Whatever the node, during the period specified by --begin/--end. --end defaults to now. --begin defaults to 7 days ago.

.TP
.B --begin=BEGIN
A begin date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --end=END
A end date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector list tags

List all available tags. Use '--like' to filter the output.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --like=LIKE
A data filtering expression. '%' is the multi-character wildcard. '_' is the single-character wildcard. Leading and trailing '%' are automatically set.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector list unavailability ack

List acknowledged periods for the service.

.TP
.B --author=AUTHOR
The acker name to log when acknowledging action log errors
.TP
.B --begin=BEGIN
A begin date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --end=END
A end date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --comment=COMMENT
A comment to log when acknowldging action log error entries.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector log

Log a message in the collector service log.

.TP
.B --message=MESSAGE
The message to send to the collector for logging.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector networks

Display network information known to the collector for each service ip.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector show actions

Show actions detailed log. A single action is specified by --id. A range is specified by --begin/--end dates. --end defaults to now. --begin defaults to 7 days ago.

.TP
.B --begin=BEGIN
A begin date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --id=ID
Specify an object id to act on
.TP
.B --end=END
A end date expressed as 'YYYY-MM-DD hh:mm' limiting the timerange the action applies to.
.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector show tags

List all service tags.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector tag

Set a service tag (pointed by --tag).

.TP
.B --tag=TAG
The tag name, as shown by 'collector list tags'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc collector untag

Unset a service tag (pointed by --tag).

.TP
.B --tag=TAG
The tag name, as shown by 'collector list tags'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

\fRCOMMON OBJECT ACTIONS\fP

  om svc deploy

Create and provision a new service.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --config=PARM_CONFIG
The configuration to use as template when creating or installing a service. The value can be '-' or '/dev/stdin' to read the json-formatted configuration from stdin, or a file path, or uri pointing to a ini-formatted configuration, or a service selector expression (ATTENTION with cloning existing live services that include more than containers, volumes and backend ip addresses ... this could cause disruption on the cloned service).
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B -i, --interactive
Prompt the user for a choice instead of using defaults, or failing if no default is defined.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B --leader
Switch the provision action behaviour to leader, ie provision shared resources that are not provisionned by default.
.TP
.B --restore
Keep the same service id as the template or config file referenced by the create action. The default behaviour is to generate a new id.
.TP
.B --template=PARM_TEMPLATE
The configuration file template name or id, served by the collector, to use when creating or installing a service.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc logs

Display the service logs. All service instances logs are aggregated.

.TP
.B --backlog=BACKLOG
A size expression limiting the volume of data fetched from the log file tail. Default is 10k.
.TP
.B --follow
Follow the logs as they come. Use crtl-c to interrupt.
.TP
.B --no-pager
Do not display the command result in a pager.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc ls

List the service names with a local instance. Most useful to test a service selector expression before running an action.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc monitor

Display or watch the synthetic service status, and perf metrics.

.TP
.B --sections=SECTIONS
the comma-separated list of sections to display. if not set, all sections are displayed. sections names are: threads,arbitrators,nodes,services.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print config mtime

Display the service local configuration file modification time

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print status

Display the service status, with a detailed view of the local instance.

Resources Flags:

(1) `R`   Running,           `.` Not Running

(2) `M`   Monitored,         `.` Not Monitored

(3) `D`   Disabled,          `.` Enabled

(4) `O`   Optional,          `.` Not Optional

(5) `E`   Encap,             `.` Not Encap

(6) `P`   Not Provisioned,   `.` Provisioned

(7) `S`   Standby,           `.` Not Standby

(8) `<n>` Remaining Restart, `+` if more than 10,  `.`   No Restart


.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --hide-disabled
Do not include the disabled resources. This option supersedes the 'show_disabled' value in the service configuration.
.TP
.B -r, --refresh
Drop status caches and re-evaluate before printing.
.TP
.B --show-disabled
Include the disabled resources. This option supersedes the 'show_disabled' value in the service configuration.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc purge

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Unprovision and delete selected services.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --purge-collector
On service delete, also remove the service collector-side
.TP
.B --leader
Switch the provision action behaviour to leader, ie provision shared resources that are not provisionned by default.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc status

Return the local service instance overall status code.

.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B -r, --refresh
Drop status caches and re-evaluate before printing.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

\fRCOMPLIANCE\fP

  om svc compliance attach

Attach rulesets specified by '--ruleset' and modulesets specified by '--moduleset' to this service. Attached modulesets are scheduled for check or autofix.

.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset=RULESET
Specify the rulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance auto

Run compliance checks or fixes, depending on the autofix module property values.

.TP
.B --attach
Attach the modulesets specified in a compliance run.
.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --module=MODULE
Specify the modules to limit the run to. The modules must be in already attached modulesets.
.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset-date=RULESET_DATE
Use an historical ruleset, specified by its date.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance check

Run compliance checks.

.TP
.B --attach
Attach the modulesets specified in a compliance run.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --module=MODULE
Specify the modules to limit the run to. The modules must be in already attached modulesets.
.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset-date=RULESET_DATE
Use an historical ruleset, specified by its date.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance detach

Detach rulesets specified by '--ruleset' and modulesets specified by '--moduleset' from this service. Detached modulesets are no longer scheduled for check and autofix.

.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset=RULESET
Specify the rulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance env

Show the environment variables set during a compliance module run.

.TP
.B --module=MODULE
Specify the modules to limit the run to. The modules must be in already attached modulesets.
.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance fix

Run compliance fixes.

.TP
.B --attach
Attach the modulesets specified in a compliance run.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --module=MODULE
Specify the modules to limit the run to. The modules must be in already attached modulesets.
.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset-date=RULESET_DATE
Use an historical ruleset, specified by its date.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance fixable

Verify compliance fixes prerequisites.

.TP
.B --attach
Attach the modulesets specified in a compliance run.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --module=MODULE
Specify the modules to limit the run to. The modules must be in already attached modulesets.
.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --ruleset-date=RULESET_DATE
Use an historical ruleset, specified by its date.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance list moduleset

List available compliance modulesets. Setting '--moduleset f%' limits the resultset to modulesets matching the `f%` pattern.

.TP
.B --moduleset=MODULESET
Specify the modulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance list ruleset

List available compliance rulesets. Setting '--ruleset f%' limits the scope to rulesets matching the `f%` pattern.

.TP
.B --ruleset=RULESET
Specify the rulesets to limit the action to. The special value 'all' can be used in conjonction with detach.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance show moduleset

Show compliance rules applying to this service.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance show ruleset

Show compliance rules applying to this service.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc compliance show status

Show compliance modules status.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

\fROBJECT CONFIGURATION\fP

  om svc create

Create a new service.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --config=PARM_CONFIG
The configuration to use as template when creating or installing a service. The value can be '-' or '/dev/stdin' to read the json-formatted configuration from stdin, or a file path, or uri pointing to a ini-formatted configuration, or a service selector expression (ATTENTION with cloning existing live services that include more than containers, volumes and backend ip addresses ... this could cause disruption on the cloned service).
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B -i, --interactive
Prompt the user for a choice instead of using defaults, or failing if no default is defined.
.TP
.B --leader
Switch the provision action behaviour to leader, ie provision shared resources that are not provisionned by default.
.TP
.B --provision
Provision the service resources after config file creation. Defaults to False.
.TP
.B --resource=RESOURCE
A resource definition in json dictionary format fed to create or update. The 'rtype' key point the driver group name, and the 'type' key the driver name (translated to type in the configuration file section).
.TP
.B --restore
Keep the same service id as the template or config file referenced by the create action. The default behaviour is to generate a new id.
.TP
.B --template=PARM_TEMPLATE
The configuration file template name or id, served by the collector, to use when creating or installing a service.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc delete

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Delete a service, or only the resources specified by '--rid' on the local service instance.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --purge-collector
On service delete, also remove the service collector-side
.TP
.B --unprovision
Unprovision the service resources before config files file deletion. Defaults to False.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc edit config

Edit the service configuration. The new configuration file is actually installed only if it passes validation, so this action is recommended over direct edition.

.TP
.B --discard
Discard the stashed, invalid, configuration file.
.TP
.B --recover
Recover the stashed erroneous configuration file in a 'edit config' command
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc eval

Evaluate the value of a service configuration keyword.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --impersonate=IMPERSONATE
Impersonate a peer node when evaluating keywords.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc get

Get the raw value of a service configuration keyword.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --eval
If set with the 'get' action, the printed value of '--param' is evaluated, scoped and dereferenced. If set with the 'set' action, the current value is evaluated before mangling.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --impersonate=IMPERSONATE
Impersonate a peer node when evaluating keywords.
.TP
.B --param=PARAM
An expression like '[<section>.]<keyword>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print config

Display the service current configuration.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --eval
If set with the 'get' action, the printed value of '--param' is evaluated, scoped and dereferenced. If set with the 'set' action, the current value is evaluated before mangling.
.TP
.B --impersonate=IMPERSONATE
Impersonate a peer node when evaluating keywords.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc set

Set a service configuration parameter

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B --add=ADD
A list member to add to the value pointed by '--param'. If '--index' is set, insert the new element at the specified position in the list.
.TP
.B --eval
If set with the 'get' action, the printed value of '--param' is evaluated, scoped and dereferenced. If set with the 'set' action, the current value is evaluated before mangling.
.TP
.B --index=INDEX
The position in the list pointed by --param where to add the new list element on a set action
.TP
.B --param=PARAM
An expression like '[<section>.]<keyword>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
.TP
.B --remove=REMOVE
A list member to drop from the value pointed by '--param'.
.TP
.B --value=VALUE
The value to set for the keyword pointed by '--param'
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc unset

Unset a node configuration keyword.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --kw=KW
An expression like '[<section>.]<keyword>[@<scope>][[<index>]]<op><value>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
* <op> can be:

  * '='  set as new value
  * '-=' remove value from the current list
  * '+=' append value to the current list
  * '|=' append value to the current list if not already included

Multiple --kw can be set to apply multiple configuration change in a file with a single write.

Examples:

* app.start=false
  Turn off app start for all app resources
* app#1.start=true
  Turn on app start for app#1
* nodes+=node3
  Append node3 to nodes
* nodes[0]+=node3
  Preprend node3 to nodes

.TP
.B --param=PARAM
An expression like '[<section>.]<keyword>' where

* <section> can be:

  * a resource id
  * a resource driver group name (fs, ip, ...). For the set and unset actions only, set the keyword for all matching resources.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc update

Update definitions in an existing service configuration file.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --provision
Provision the service resources after config file creation. Defaults to False.
.TP
.B --resource=RESOURCE
A resource definition in json dictionary format fed to create or update. The 'rtype' key point the driver group name, and the 'type' key the driver name (translated to type in the configuration file section).
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc validate config

Check the section names and keywords are valid.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

\fRSERVICE AND VOLUME OBJECT ACTIONS\fP

  om svc abort

Abort the action asynchronously done by the cluster daemons.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc boot

Clean up actions executed before the daemon starts. For example scsi reservation release and vg tags removal. Never execute this action manually.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc clear

Clear the monitor status of the service on the node pointed by --node. If --node is not specified, all nodes are cleared. This command can be used to reactivate service orchestration blocked by a failed status like `start failed`.

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc disable

Disable resources specified by '--rid' in services specified by '--service'. Specifying no resource disables the whole service.

.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc dns update

Update the collector dns records for the service. The managed dns record is <name>.<app>.<collector domain>`.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc docker

Wrap the docker client command, setting automatically the socket parameter to join the service-private docker daemon. The {as_service}, {images} and {instances} words in the wrapped command are replaced by, respectively, the registry login username/password/email parameters to log as a service using <path>@<nodename> as the username and the node uuid as password (which is what is expected when the opensvc collector is used as the JWT manager for the registry), the set of docker instance names and images for container resources passing the --tags, --rid and --subsets filters. This is useful to remove all instances of a service or all instances of resources with a tag like 'frontend'. Note the opensvc filters must be positioned before the docker command in the arguments list.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc enable

Enable resources specified by '--rid' in services specified by '--service'. Specifying no resource enables the whole service.

.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc enter

Enter the container specified by --rid <rid>, executing a shell.

.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc freeze

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Block orchestration on the service.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc frozen

Report on the current blocking of orchestration on the service.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc giveback

Stop the service on its current node and start on the node chosen by the placement policy.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc install data

Install secrets and configurations in volume resources with secrets or configurations mapping configured.

.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc migrate

Live migrate the service to the remote node. --to <node> specify the remote node to migrate the service to.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --to=TO
The remote node to start or migrate the service to. Or the target number of instance to scale to.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc move

Ask the daemon to orchestrate a stop of the service instances running on nodes not in the specified target, and start instances on the specified target nodes. The target is specified by '--to <nodename>,<nodename>'.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --to=TO
The remote node to start or migrate the service to. Or the target number of instance to scale to.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc oci

Wrap the podman or docke client command, setting automatically the namespace, cni-config-dir options and eventually the --root and --runroot options for services configured for private storage. The {as_service}, {images} and {instances} words in the wrapped command are replaced by, respectively, the registry login username/password/email parameters to log as a service using <path>@<nodename> as the username and the node uuid as password (which is what is expected when the opensvc collector is used as the JWT manager for the registry), the set of podman container names and images for container resources passing the --tags, --rid and --subsets filters. This is useful to remove all instances of a service or all instances of resources with a tag like 'frontend'. Note the opensvc filters must be positioned before the docker command in the arguments list.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc pg freeze

Freeze the tasks of a process group.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc pg kill

Kill the tasks of a process group.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc pg pids

Display the tasks of the service process groups or selected resources process groups.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc pg thaw

Thaw the tasks of a process group.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc podman

Wrap the podman client command, setting automatically the namespace, cni-config-dir options and eventually the --root and --runroot options for services configured for private storage. The {as_service}, {images} and {instances} words in the wrapped command are replaced by, respectively, the registry login username/password/email parameters to log as a service using <path>@<nodename> as the username and the node uuid as password (which is what is expected when the opensvc collector is used as the JWT manager for the registry), the set of podman container names and images for container resources passing the --tags, --rid and --subsets filters. This is useful to remove all instances of a service or all instances of resources with a tag like 'frontend'. Note the opensvc filters must be positioned before the docker command in the arguments list.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc postsync

Execute the postsync method of the resource driver for each local service instance resource. These methods usually take appropriate action based on var files received from the primary node.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc presync

Execute the presync method of the resource driver for each local service instance resource. These methods usually update var files needing replication on other nodes.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print base devs

Print the list of base devices the local service instance or the specified resources are layered on.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print devs

Aggregate the information of 'print base devs', 'print sub devs' and 'print exposed devs'.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print exposed devs

Print the list of devices the local service instance or the specified resources expose.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print resinfo

Display the service resource and env section key/val pairs pushed to the collector.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print resource status

Display a specific service resource status, pointed by --rid

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B -r, --refresh
Drop status caches and re-evaluate before printing.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print schedule

Print the service tasks schedule.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --verbose
Include more information to some print commands output. For example, add the 'next run' column in the output of 'print schedule'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc print sub devs

Print the list of devices the local service instance or the specified resources are layered on.

.TP
.B --filter=JSONPATH_FILTER
A JSONPath expression to filter a JSON output.
.TP
.B --format=FORMAT
Specify a data formatter. Possible values are json, flat_json, csv or table. csv and table formatters are available only for commands returning tabular data.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc provision

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Provision the service. Leave the service in frozen, stdby up state.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --leader
Switch the provision action behaviour to leader, ie provision shared resources that are not provisionned by default.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc prstatus

Report the status of scsi3 persistent reservations on scsi disks held by the local service instance.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc pull

Pull a service configuration from the collector, overwritting the currently installed one.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --provision
Provision the service resources after config file creation. Defaults to False.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc push config

Push service configuration to the collector.

.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc push encap config

Push service configuration to the containers hosting an encapsulated service.

.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc push resinfo

Push the local service instance resources and application launchers info key/value pairs the collector.

.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --sync
Use synchronous collector communication. For example, 'push resinfo --sync' before a compliance run makes sure the pushed data has hit the collector database before the rulesets are contextualized.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc push status

Push service instance status to the collector synchronously.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc resource monitor

Refresh the monitored resource status. This action is scheduleable, usually every minute.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc restart

Chain a local service instance stop and start

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc resync

Chain a local service instance  stop, sync_resync and start

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc run

Run all tasks, or tasks specified by --rid --tags and --subset, disregarding their schedule.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --confirm
Confirm a run action configured to ask for confirmation. This can be used when scripting the run or triggering it from the api.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc scale

Create-provision or delete-unprovision instances to meet service scale target.

.TP
.B --to=TO
The remote node to start or migrate the service to. Or the target number of instance to scale to.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc set provisioned

Set the resources as provisioned.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc set unprovisioned

Set the resources as unprovisioned.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc shutdown

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Stop a service, including its standby resources. The log shipping to the collector is synchronous.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc snooze

Snooze alerts on the node for '--duration'

.TP
.B --duration=DURATION
A duration expression like, '1h10m'.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc start

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Start a service. The started instances depend on the service placement policy, so the local instance may not start. A failover service is considered started when one instance is started. A flex service is considered started when the number of started instances is between `<flex_min>` and `<flex_max>`.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --upto=UPTO
Start the service up to the specified rid or driver group.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc startstandby

Start local service instance resources flagged standby.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc stop

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Stop all service instances. The standby resources are not stopped, unless '--force' is specified.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --downto=UPTO
Stop the service down to the specified rid or driver group.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc support

Create a tarball archive of config, var and log files, and upload it to the OpenSVC support site.

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc switch

Stop the running failover service instance and start the instance on the peer node specified by '--to <nodename>'.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --to=TO
The remote node to start or migrate the service to. Or the target number of instance to scale to.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync all

Chain sync nodes, sync drp and sync update.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --cron
If set, the action is actually executed only if the schedulingconstraints are satisfied.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync break

Break the disk replication of sync.hp3par, sync.ibmdssnap, sync.netapp, sync.symclone, sync.symsrdf resources.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync drp

Run the synchronization method of each local service instance sync resource, targetting the drp nodes.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync establish

Establish disk replication of sync.symsrdf resources.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync full

Trigger a full copy of the volume to its target.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync nodes

Run the synchronization method of each local service instance sync resource, targetting the peer nodes.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync quiesce

Pause replication of sync.netapp and sync.symsrdf resources.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync restore

Trigger a restore of the sync resources data to their target path (DANGEROUS: make sure you understand before running this action).

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync resume

Re-establish a broken storage hardware-assisted synchronization.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync resync

Like 'sync update', but not triggered by the scheduler (thus adapted for clone/snap operations).

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync revert

Revert to the pre-failover data (looses current data).

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync split

Split the disk replication of sync.symsrdf resources.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync update

Trigger a one-time resync of the volume to its target.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc sync verify

Trigger a one-time checksum-based verify of the volume and its target.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc takeover

Stop the service on its current node and start on the local node.

.TP
.B --disable-rollback
If set, don't try to rollback resources activated before a start action interrupts on error.
.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc thaw

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Unblock orchestration on the service.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc toc

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Trigger the service instance pre_monitor_action script and monitor_action method. Beware, this might crash or reboot the local node.

.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc unprovision

Asynchronous orchestrated action, unless --local or --node <node> is specified.

Shutdown and unprovision all service instances. Beware, data will be lost upon fs and disk unprovisioning.

.TP
.B --time=TIME
A duration expression like '1m5s'. The maximum wait time for an async action to finish. Default is 300 seconds.
.TP
.B --wait
Wait for asynchronous action termination.
.TP
.B --stats
Show system resources usage metrics and refresh the information every --interval.
.TP
.B -w, --watch
refresh the information every --interval.
.TP
.B --interval=INTERVAL
with --watch, set the refresh interval. defaults to 0, to refresh on event only.
.TP
.B --dry-run
Show the action execution plan.
.TP
.B -f, --force
Force action, ignore sanity checks.
.TP
.B --master
Limit the action scope to the master service resources.
.TP
.B --nolock
Don't acquire the action lock. Dangerous, but can be useful to set parameters from an action trigger.
.TP
.B --rid=PARM_RID
A resource specifier expression like '<spec>[,<spec>]', where '<spec>' can be:

* A resource id
* A driver group name (app, fs, disk, ...)

Examples:

* 'app'
  all app resources
* 'container#1,ip#1'
  only container#1 and ip#1

.TP
.B --slave=SLAVE
Limit the action to the service resources in the specified, comma-separated, slaves.
.TP
.B --slaves
Limit the action scope to service resources in all slaves.
.TP
.B --subsets=PARM_SUBSETS
Limit the action to the resources in the specified, comma-separated, list of subsets.
.TP
.B --tags=PARM_TAGS
A comma-separated list of resource tags to limit action to. The '+' separator can be used to impose multiple tag conditions. For example, 'tag1+tag2,tag3' limits the action to resources with both tag1 and tag2, or tag3.
.TP
.B --leader
Switch the provision action behaviour to leader, ie provision shared resources that are not provisionned by default.
.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.

  om svc unsnooze

Unsnooze alerts on the node

.TP
.B --namespace=NAMESPACE
The namespace to switch to for the action. Namespaces are cluster partitions. A default namespace can be set for the session setting the OSVC_NAMESPACE environment variable.
.TP
.B -s PARM_SVCS, --service=PARM_SVCS
A service selector expression '[!]<expr>[<sep>[!]<expr>]' where:

- '!' is the expression negation operator

- '<sep>' can be:

  - ',' OR expressions

  - '+' AND expressions

- '<expr>' can be:

  - a shell glob on service names

  - '<param><op><value>' where:

    - '<param>' can be:

      - '<rid>:'

      - '<group>:'

      - '<rid>.<key>'

      - '<group>.<key>'

      - '<single value jsonpath expression on the $.monitor.services.<path> dictionary extended under the 'nodes' key by each instance 'status' and 'config' data>'

    - '<op>' can be:

      - '<'  '>'  '<='  '>='  '='

      - '~' the string or any list element matches the regexp value

      - '~=' the string matches regexp value or any list element is the value

Examples:

- '*dns,ha*+app.timeout>1'

- 'ip:+task:'

- '!*excluded'

- '$.avail=warn'

- '$.nodes.*.status.avail=warn'

Note:

- '!' usage requires single quoting the expression to prevent shell history expansion
.TP
.B --status=PARM_STATUS
Operate only on service with a local instance in the specified availability status (up, down, warn, ...).
.TP
.B --node=NODE
The node to send a request to. If not specified the local node is targeted.
.TP
.B --local
Execute the service action on the local service instances only, ignoring cluster-wide considerations.
.TP
.B --color=COLOR
Colorize output. Possible values are:

* auto: guess based on tty presence
* always|yes: always colorize
* never|no: never colorize
.TP
.B --debug
Increase stream and file log verbosity up to the debug level.
.TP
.B --env=ENV
Export the uppercased variable in the os environment.

With the create action only, set a env section parameter in the service configuration file. Multiple '--env <key>=<val>' can be specified. For all other actions.
.TP
.B -p, --parallel
Start actions on specified services in parallel. 'max_parallel' in node.conf limits the number of parallel running subprocesses.
.TP
.B --waitlock=PARM_WAITLOCK
A duration expression like '5s'. The maximum wait time when acquiring the service action lock.
.TP
.B -h, --help
Show this help message and exit.
.SH OPTIONS
.SH SEE ALSO
.BR nodemgr (1)
.BR svcmgr (1)
.BR svcmon (1)
.SH AUTHORS
OpenSVC is developped and maintained by the OpenSVC company.
