#!/bin/sh

# variables users can override in the defaults file
OSVC_ROOT_PATH="/usr/share/opensvc"
OSVC_PYTHON="python"
OSVC_PYTHON_ARGS=""

if [ -r "/etc/defaults/opensvc" ]
then
	# FreeBSD, Darwin
	. "/etc/defaults/opensvc"
elif [ -r "/etc/default/opensvc" ]
then
	# Debian-like, Tru64, SunOS and HP-UX
	. "/etc/default/opensvc"
elif [ -r "/etc/sysconfig/opensvc" ]
then
	# Red Hat-like
	. "/etc/sysconfig/opensvc"
elif [ -r "/etc/conf.d/opensvc" ]
then
	# Alpine, Gentoo
	. "/etc/conf.d/opensvc"
elif [ -r "/etc/rc.config.d/opensvc" ]
then
	# AIX
	. "/etc/rc.config.d/opensvc"
fi

INTER="$OSVC_PYTHON $OSVC_PYTHON_ARGS"
BASENAME=`basename $0`

case $BASENAME in
om)
	;;
opensvc)
	#
	# Use me as the shebang for python modules to be garantied the
	# same python requirements than the agent are met (ie 2.6+).
	#
	# Example: #!/usr/bin/env opensvc
	#
	exec "$OSVC_PYTHON" "$@"
	;;
nodemgr)
	KIND=node
	;;
svcmgr)
	KIND=svc
	;;
volmgr)
	KIND=vol
	;;
usrmgr)
	KIND=usr
	;;
secmgr)
	KIND=sec
	;;
cfgmgr)
	KIND=cfg
	;;
ccfgmgr)
	KIND=ccfg
	;;
svcmon)
	KIND=mon
	;;
esac

main() {
	if test -z "$OSVC_CONTEXT"
	then
		case "`id`" in
		uid=0\(*)
			;;
		*)
			SUDO=`which sudo 2>/dev/null`
			;;
		esac
	fi
	if test -n "$KIND"
	then
		$SUDO PYTHONPATH="$OSVC_ROOT_PATH" $INTER $OSVC_PYTHON_ARGS -m opensvc $KIND "$@"
		return $?
	fi
	test -z "$SUDO" && SUDO=env || SUDO="$SUDO OSVC_NAMESPACE=$OSVC_NAMESPACE"
	case $1 in
	ns)
		echo "The 'om' alias must be sourced to handle ns actions" >&2
		exit 1
		;;
	*)
		$SUDO PYTHONPATH="$OSVC_ROOT_PATH" $INTER $OSVC_PYTHON_ARGS -m opensvc "$@"
		;;
	esac
}

main "$@"
